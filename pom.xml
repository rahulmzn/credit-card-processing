<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/>
	</parent>
	<groupId>com.bank</groupId>
	<artifactId>credit-card-processing</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>credit-card-processing</name>
	<description>Credit Card Processing  Application</description>
	<packaging>jar</packaging>

	<properties>
		<jdk.version>1.8</jdk.version>
		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportsPath>${project.build.directory}/reports/jacoco</sonar.jacoco.reportsPath>
		<sonar.jacoco.reportPath>${project.build.directory}/reports/jacoco/jacoco-ut.exec</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${project.build.directory}/reports/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
		<maven.build.timestamp>${maven.build.timestamp}</maven.build.timestamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
	</properties>

	<!-- Source Code Management -->
	<scm>
		<connection>scm:git@github.com:rahulmzn/credit-card-processing.git</connection>
		<url>scm:git@github.com:rahulmzn/credit-card-processing.git</url>
		<developerConnection>scm:git@github.com:rahulmzn/credit-card-processing.git</developerConnection>
	</scm>
	<!-- Source Code Management -->
	<dependencies>
		<!-- Start Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- End Spring Boot -->
		<!-- start constraints -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<!-- end constraints -->
		<!-- start in-memory database-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
		</dependency>
		<dependency>
			<groupId>cz.jirutka.spring</groupId>
			<artifactId>embedmongo-spring</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- end in-memory database -->
		<!-- Start Junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- End Junit -->
		<!-- Start Rest API documentation -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.pjl-comp-filter</groupId>
			<artifactId>pjl-comp-filter</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- End Rest API documentation -->
		<!-- Start  JSON -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- End JSON -->
		<!-- Start Swagger Docs-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.2</version>
		</dependency>
		<!-- End Swagger Docs -->
		<!-- Start Supporting lib -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- End Supporting lib-->
	</dependencies>

	<build>
		<!-- Start Source -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<!-- End of Source -->

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Start Run Test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<delimiters>
						<delimiter>${*}</delimiter>
						<delimiter>%%</delimiter>
					</delimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
				</configuration>
			</plugin>
			<plugin>
				<!-- Separates the unit tests from the integration tests. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLineut}</argLine>
							<!-- Never skip running the tests when the test phase is invoked -->
							<skip>false</skip>
							<includes>
								<!-- Include unit tests within integration-test phase. -->
								<include>**/*Test*.java</include>
							</includes>
							<excludes>
								<exclude>**/*AllIntegrationTests.java</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLineit}</argLine>
							<!-- Never skip running the tests when the integration-test phase
								is invoked -->
							<skip>false</skip>
							<includes>
								<!-- Include integration tests within integration-test phase. -->
								<include>**/*Tests*.java</include>
							</includes>
							<excludes>
								<exclude>**/*AllTests.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!-- Skip the default running of this plug-in (or everything is run
						twice...see below) -->
					<skip>true</skip>
					<!-- Show 100% of the lines from the stack trace (doesn't work) -->
					<trimStackTrace>false</trimStackTrace>
				</configuration>
			</plugin>
			<!-- End Run Test -->
			<!-- Start Reporting -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<configuration>
					<includes>
						<include>**</include>
					</includes>
				</configuration>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo
								runtime agent. -->
							<propertyName>surefireArgLineut</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${sonar.jacoco.reportPath}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.build.directory}/reports/jacoco/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo
								runtime agent. -->
							<propertyName>surefireArgLineit</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created
						after unit tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${sonar.jacoco.itReportPath}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${sonar.jacoco.reportsPath}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- End Reporting -->


			<!-- Start Rest API document generation -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.2</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.0-alpha.9</version>
					</dependency>
				</dependencies>
				<configuration>
					<sourceDirectory>src/main/apidocs</sourceDirectory>
					<templateDir>src/main/apidocs</templateDir>
					<preserveDirectories>true</preserveDirectories>
					<title>Credit Card System</title>
					<attributes>
						<snippets>${snippetsDirectory}</snippets>
						<project-version>${project.version}</project-version>
						<dev-endpoint-url>http://localhost:8080/api</dev-endpoint-url>
						<test-endpoint-url>http://localhost/api</test-endpoint-url>
						<endpoint-url>https://localhost/api</endpoint-url>
					</attributes>
				</configuration>
				<executions>
					<execution>
						<id>output-html</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
					<execution>
						<id>output-pdf</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<sourceHighlighter>rouge</sourceHighlighter>
							<attributes>
								<toc>left</toc>
								<icons>font</icons>
								<idprefix />
								<sectanchors>true</sectanchors>
								<!-- set the idprefix to blank -->
								<idprefix />
								<idseparator>-</idseparator>
								<docinfo1>true</docinfo1>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- End Rest API document generation -->
		</plugins>
	</build>

</project>
